{"version":3,"sources":["logo.svg","components/Ticket.js","components/TicketsList.js","store/mappers/ticketsList.js","actions/index.js","components/AddTicketModal.js","reducers/initialState.js","components/SortingRow.js","store/mappers/SortingRow.js","components/Filters.js","store/mappers/Filters.js","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["formatPrice","price","Intl","NumberFormat","style","currency","format","Ticket","ticket","company","transfers","Card","className","Body","connect","state","tickets","displayedTickets","dispatch","length","map","idx","ADD_TICKET","CHANGE_FILTER","CHANGE_SORTING","addTicketAction","localStorage","getItem","JSON","parse","push","setItem","stringify","safeTicketToLocalStorage","type","changeSorting","sorting","show","handleClose","schema","yup","required","test","num","match","integer","min","max","Modal","onHide","Header","closeButton","Title","enableReinitialize","initialValues","validationSchema","onSubmit","form","resetForm","handleSubmit","handleChange","values","errors","touched","isValid","Form","noValidate","Group","controlId","Label","Control","as","name","value","isInvalid","onChange","Feedback","Footer","Button","variant","onClick","PRICE_ASC","PRICE_DESC","ALL_TRANSFERS","initialState","filters","console","log","toggleFilter","filter","changeFilter","Check","label","checked","includes","useState","isModalOpen","setModalOpen","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sortTickets","order","sort","a","b","currentFilters","splice","indexOf","applyFilters","newTickets","forEach","concat","parseInt","store","createStore","action","newState","newFilters","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64dce04c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {Card} from \"react-bootstrap\";\n\nconst formatPrice = (price) => {\n    const formatter = new Intl.NumberFormat('ru-RU', {style: 'currency', currency: 'RUB'});\n    return formatter.format(price)\n}\nexport default function Ticket({ticket: {company='', price = 0, transfers = 0}})\n{\n    return <Card className=\"m-3\">\n        <Card.Body>\n            <div className=\"col d-flex justify-content-between\">\n                <div className=\"text-left\">\n                    <strong>Price: </strong>\n                    {formatPrice(price)}\n                </div>\n                <div className=\"text-right\">{company}</div>\n            </div>\n            <div className=\"col text-left\">\n                <strong>Number of transfers: </strong><span>{transfers}</span>\n            </div>\n        </Card.Body>\n    </Card>\n}","import { connect } from 'react-redux';\nimport ticketsListMapStateToProps from \"../store/mappers/ticketsList\";\nimport Ticket from \"./Ticket\";\n\nfunction TicketsList({tickets, dispatch})\n{\n\n    return (tickets.length ?\n        tickets.map((ticket, idx) => (<Ticket key={idx} ticket={ticket} />)) :\n            <div className=\"text-center\">There is no tickets available</div>\n    )\n}\n\nexport default connect(ticketsListMapStateToProps)(TicketsList)","\nexport default function ticketsListMapStateToProps(state) {\n    return {\n        tickets: state.displayedTickets\n    }\n}\n","export const ADD_TICKET = 'ADD_TICKET';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\nexport const CHANGE_SORTING = 'CHANGE_SORTING';\n\nconst safeTicketToLocalStorage = (ticket) =>\n{\n    let tickets = localStorage.getItem('ticketsList') ? JSON.parse(localStorage.getItem('ticketsList')) : [];\n    tickets.push(ticket);\n    localStorage.setItem('ticketsList', JSON.stringify(tickets));\n}\n\nexport const addTicketAction = (ticket) =>\n{\n    safeTicketToLocalStorage(ticket);\n    return {\n        type: ADD_TICKET,\n        ticket: ticket\n    }\n};\n\nexport const changeFilter = (filter) => ({\n    type: CHANGE_FILTER,\n    filter: filter\n})\n\nexport const changeSorting = (sorting) => ({\n    type: CHANGE_SORTING,\n    sorting: sorting\n})","import {Button, Form, Modal} from \"react-bootstrap\";\nimport * as yup from 'yup';\nimport {Formik} from \"formik\";\nimport {connect} from \"react-redux\";\nimport {addTicketAction} from \"../actions\";\n\nfunction AddTicketModal({show, handleClose, dispatch})\n{\n    const initialFields = {company: 'Utair', price: '', transfers: 0};\n\n    const schema = yup.object({\n        company: yup.string().required(),\n        price: yup.number()\n            .test('is-money', \"not a money pattern\", (num) => (num + \"\").match(/^[0-9]+(\\.[0-9]{1,2})?$/))\n            .required(),\n        transfers: yup.number().integer().min(0).max(3).required()\n    });\n\n    const onSubmit = (form, {resetForm}) => {\n        dispatch(addTicketAction(form));\n        resetForm();\n    }\n\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Add Ticket</Modal.Title>\n            </Modal.Header>\n\n            <Formik\n                enableReinitialize={true}\n                initialValues={initialFields}\n                validationSchema={schema}\n                onSubmit={onSubmit}\n            >\n                {({\n                      handleSubmit,\n                      handleChange,\n                      values,\n                      touched,\n                      isValid,\n                      errors\n                  }) =>\n                    (\n                        <Form noValidate onSubmit={handleSubmit}>\n                            <Modal.Body>\n                                <Form.Group controlId=\"companyId\">\n                                    <Form.Label>Company</Form.Label>\n                                    <Form.Control\n                                        required\n                                        as=\"select\"\n                                        name=\"company\"\n                                        value={values.company}\n                                        isInvalid={!!errors.company}\n                                        onChange={handleChange}>\n                                        <option key={1} value=\"Utair\">Utair</option>\n                                        <option key={2} value=\"Aeroflot\">Aeroflot</option>\n                                        <option key={3} value=\"NordWind\">NordWind</option>\n                                    </Form.Control>\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.company}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group controlId=\"priceId\">\n                                    <Form.Label>Price</Form.Label>\n                                    <Form.Control\n                                        required\n                                        isInvalid={!!errors.price}\n                                        value={values.price}\n                                        onChange={handleChange}\n                                        name=\"price\"\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.price}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group controlId=\"transfersId\">\n                                    <Form.Label>Number of Transfers</Form.Label>\n                                    <Form.Control\n                                        required\n                                        as=\"select\"\n                                        isInvalid={!!errors.transfers}\n                                        value={values.transfers}\n                                        onChange={handleChange}\n                                        name=\"transfers\"\n                                    >\n                                        <option value=\"0\">Direct Flight</option>\n                                        <option value=\"1\">1 Transfer</option>\n                                        <option value=\"2\">2 Transfers</option>\n                                        <option value=\"3\">3 Transfers</option>\n                                    </Form.Control>\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.transfers}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button variant=\"primary\" type=\"submit\">Save</Button>\n                                <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n                            </Modal.Footer>\n                        </Form>\n                    )\n                }\n            </Formik>\n        </Modal>\n    )\n}\n\nexport default connect()(AddTicketModal)","\nexport const PRICE_ASC = 'price_asc';\nexport const PRICE_DESC = 'price_desc';\nexport const ALL_TRANSFERS = 'all';\nexport const NO_TRANSFERS = 0;\nexport const ONE_TRANSFER = 1;\nexport const TWO_TRANSFERS = 2;\nexport const THREE_TRANSFERS = 3;\n\nconst tickets = localStorage.getItem('ticketsList') ? JSON.parse(localStorage.getItem('ticketsList')) : [];\n\nexport  const initialState = {\n    tickets: [...tickets],\n    sorting: PRICE_ASC,\n    filters: [ALL_TRANSFERS]\n}","import {connect} from \"react-redux\";\nimport OrderRowMapStateToProps from \"../store/mappers/SortingRow\";\nimport {PRICE_ASC, PRICE_DESC} from \"../reducers/initialState\";\nimport {Button} from \"react-bootstrap\";\nimport {changeSorting} from \"../actions\";\n\nfunction SortingRow({sorting, dispatch})\n{\n\n    return (\n        <div className=\"col d-flex justify-content-between\">\n            <Button\n                variant={sorting === PRICE_ASC ? \"primary\" : \"outline-primary\"}\n                onClick={() => dispatch(changeSorting(PRICE_ASC))}\n            >\n                Order by Price Ascending\n            </Button>\n            <Button\n                variant={sorting === PRICE_DESC ? \"primary\" : \"outline-primary\"}\n                onClick={() => dispatch(changeSorting(PRICE_DESC))}\n            >\n                Order by Price Descending\n            </Button>\n        </div>\n    )\n}\n\nexport default connect(OrderRowMapStateToProps)(SortingRow)\n\n","export default function OrderRowMapStateToProps(state)\n{\n    return {\n        sorting: state.sorting\n    }\n}\n","import {connect} from \"react-redux\";\nimport FiltersMapStateToProps from \"../store/mappers/Filters\";\nimport {Card, Form} from \"react-bootstrap\";\nimport {ALL_TRANSFERS, NO_TRANSFERS, ONE_TRANSFER, TWO_TRANSFERS, THREE_TRANSFERS} from \"../reducers/initialState\";\nimport {changeFilter} from \"../actions\";\n\nfunction Filters ({filters, dispatch})\n{\n\n    console.log(filters);\n    const toggleFilter = (filter) => {\n        dispatch(changeFilter(filter));\n    }\n    return (\n        <div className=\"col\">\n            <Card>\n                <Card.Header>\n                    Filter:\n                </Card.Header>\n                <Card.Body className=\"text-left\">\n                    <Form.Check\n                        type=\"checkbox\"\n                        value=\"all\"\n                        label=\"All\"\n                        checked={filters.includes(ALL_TRANSFERS)}\n                        onChange={() => toggleFilter(ALL_TRANSFERS)}\n                    />\n\n                    <Form.Check\n                        type=\"checkbox\"\n                        label=\"No transfers\"\n                        checked={filters.includes(NO_TRANSFERS)}\n                        onChange={() => toggleFilter(NO_TRANSFERS)}\n                    />\n\n                    <Form.Check\n                        type=\"checkbox\"\n                        label=\"1 Transfer\"\n                        checked={filters.includes(ONE_TRANSFER)}\n                        onChange={() => toggleFilter(ONE_TRANSFER)}\n                    />\n\n                    <Form.Check\n                        type=\"checkbox\"\n                        label=\"2 Transfers\"\n                        checked={filters.includes(TWO_TRANSFERS)}\n                        onChange={() => toggleFilter(TWO_TRANSFERS)}\n                    />\n\n                    <Form.Check\n                        type=\"checkbox\"\n                        label=\"3 Transfers\"\n                        checked={filters.includes(THREE_TRANSFERS)}\n                        onChange={() => toggleFilter(THREE_TRANSFERS)}\n                    />\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default connect(FiltersMapStateToProps)(Filters)\n","export default function FiltersMapStateToProps(state)\n{\n    return {\n        filters: state.filters\n    }\n}","import logo from './logo.svg';\nimport {connect} from 'react-redux';\nimport './App.css';\nimport TicketsList from \"./components/TicketsList\";\nimport {useState} from \"react\";\nimport AddTicketModal from \"./components/AddTicketModal\";\nimport SortingRow from \"./components/SortingRow\";\nimport Filters from \"./components/Filters\";\n\nfunction App() {\n\n    const [isModalOpen, setModalOpen] = useState(false);\n    const openModal = () => setModalOpen(true);\n    const closeModal = () => setModalOpen(false);\n\n    return (\n        <div className=\"App\">\n            <AddTicketModal handleClose={closeModal} show={isModalOpen}/>\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n            </header>\n            <div className=\"App-container container\">\n                <button className=\"btn btn-info\" onClick={openModal}>Add Ticket</button>\n                <div className=\"row mt-4\">\n                    <div className=\"col-md-3 filters-row\">\n                        <Filters/>\n                    </div>\n                    <div className=\"col-md-9\">\n                        <SortingRow />\n                        <TicketsList/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default connect()(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD_TICKET, CHANGE_FILTER, CHANGE_SORTING} from \"../actions\";\nimport {ALL_TRANSFERS, initialState, PRICE_ASC} from \"./initialState\";\n\nconst sortTickets = (tickets, order) => tickets.sort(\n    (a, b) => ( (order === PRICE_ASC) ? (a.price - b.price) : b.price - a.price )\n);\n\nconst toggleFilter = (currentFilters, filter) => {\n    if (filter === ALL_TRANSFERS && !currentFilters.includes(ALL_TRANSFERS)) {\n        return [ALL_TRANSFERS];\n    }\n\n    if (currentFilters.includes(filter)) {\n        currentFilters.splice(currentFilters.indexOf(filter), 1);\n    } else {\n        currentFilters.push(filter);\n        if (currentFilters.includes(ALL_TRANSFERS)) {\n            currentFilters.splice(currentFilters.indexOf(ALL_TRANSFERS), 1);\n        }\n    }\n    if (!currentFilters.length) {\n        currentFilters.push(ALL_TRANSFERS);\n    }\n    return [...currentFilters];\n}\n\nconst applyFilters = (tickets, filters) => {\n    let newTickets = [];\n    if (filters.includes(ALL_TRANSFERS)) {\n        return [...tickets];\n    }\n    filters.forEach((filter) => {\n        newTickets = newTickets.concat(tickets.filter((ticket) => (parseInt(ticket.transfers) === filter)));\n    })\n\n    return newTickets;\n}\n\nexport default function reducer (state = initialState, action)\n{\n    let newState = {}\n\n    switch(action.type) {\n        case ADD_TICKET:\n            newState = {...state, tickets: [...state.tickets, action.ticket]}\n            break;\n        case CHANGE_FILTER:\n            const newFilters = toggleFilter(state.filters, action.filter);\n            newState = {...state, filters: [...newFilters]}\n            break;\n        case CHANGE_SORTING:\n           newState = {...state, sorting: action.sorting}\n            break;\n        default:\n            newState = {...state}\n            break;\n    }\n\n    return {\n        ...newState,\n        displayedTickets: sortTickets(\n            applyFilters(newState.tickets, newState.filters),\n            newState.sorting\n        )\n    };\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from \"redux\";\nimport { Provider } from 'react-redux';\nimport reducer from \"./reducers\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n    </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}